name: Build & Push (GHCR)

on:
  workflow_dispatch:
    inputs:
      PROCESSING_VERSION:
        description: Processing version (e.g. 4.3.2)
        required: true
      PROCESSING_BUILD:
        description: Processing build (e.g. 1277)
        required: true
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE: ${{ github.repository_owner }}/ros2-p5-dev
  DEFAULT_PROCESSING_VERSION: "4.4.10"
  DEFAULT_PROCESSING_BUILD:   "1310"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros: [kilted, jazzy, humble]
        include:
          - ros: kilted
            latest: true
          - ros: jazzy
            latest: false
          - ros: humble
            latest: false

    steps:
      - uses: actions/checkout@v4

      - name: Resolve config
        id: cfg
        run: |
          PV="${{ github.event.inputs.PROCESSING_VERSION }}"; PV="${PV:-${{ vars.PROCESSING_VERSION }}}"; PV="${PV:-${{ env.DEFAULT_PROCESSING_VERSION }}}"
          PB="${{ github.event.inputs.PROCESSING_BUILD   }}"; PB="${PB:-${{ vars.PROCESSING_BUILD   }}}";   PB="${PB:-${{ env.DEFAULT_PROCESSING_BUILD   }}}"
          echo "PROCESSING_VERSION=$PV" >> $GITHUB_OUTPUT
          echo "PROCESSING_BUILD=$PB"   >> $GITHUB_OUTPUT

      - name: Guard
        if: ${{ steps.cfg.outputs.PROCESSING_VERSION == '' || steps.cfg.outputs.PROCESSING_BUILD == '' }}
        run: |
          echo "::error::PROCESSING_VERSION and/or PROCESSING_BUILD is not set"
          exit 1

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Compose fixed tags
        id: tags
        run: |
          MAIN="processing-${{ steps.cfg.outputs.PROCESSING_VERSION }}-build-${{ steps.cfg.outputs.PROCESSING_BUILD }}-ros-${{ matrix.ros }}"
          echo "main=${MAIN}" >> $GITHUB_OUTPUT

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE }}
          tags: |
            type=raw,value=${{ steps.tags.outputs.main }}
            type=raw,value=${{ matrix.ros }}
            type=raw,value=latest,enable=${{ matrix.latest && github.ref == 'refs/heads/main' }}
          labels: |
            org.opencontainers.image.title=ros2-p5-dev
            org.opencontainers.image.description=ROS2 + Processing toolchain image
            org.opencontainers.image.vendor=sayakaakioka
            org.opencontainers.image.version=${{ steps.cfg.outputs.PROCESSING_VERSION }}-${{ steps.cfg.outputs.PROCESSING_BUILD }}
            io.github.processing.version=${{ steps.cfg.outputs.PROCESSING_VERSION }}
            io.github.processing.build=${{ steps.cfg.outputs.PROCESSING_BUILD }}
            io.ros.distro=${{ matrix.ros }}
            
      - name: Build & push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            UBUNTU_TAG=24.04
            ROS_DISTRO=${{ matrix.ros }}
            PROCESSING_VERSION=${{ steps.cfg.outputs.PROCESSING_VERSION }}
            PROCESSING_BUILD=${{ steps.cfg.outputs.PROCESSING_BUILD }}
          provenance: false
