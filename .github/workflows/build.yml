name: build-multiarch
on:
  push:
    branches: [ main ]
    tags: [ '*' ]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write   # for pushing to GHCR

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/ros2-p5-dev
  PROCESSING_VERSION: "4.4.10"
  PROCESSING_BUILD: "1310"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - ros: kilted
            ubuntu: "24.04"
            latest: true
          - ros: jazzy
            ubuntu: "24.04"
            latest: false
          - ros: humble
            ubuntu: "22.04"
            latest: false
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (amd64, arm64)
        env:
          UILDKIT_PROGRESS: plain
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ matrix.ros }}
          labels: |
            org.opencontainers.image.title=ros2-p5-dev
            org.opencontainers.image.description=ROS2 ${ {matrix.ros} } + Processing ${{ env.PROCESSING_VERSION }} (linux/amd64, linux/arm64)
          build-args: |
            UBUNTU_TAG=${{ matrix.ubuntu }}
            ROS_DISTRO=${{ matrix.ros }}
            PROCESSING_VERSION=${{ env.PROCESSING_VERSION }}
            PROCESSING_BUILD=${{ env.PROCESSING_BUILD }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
        - name: Tag :latest -> kilted
          if: matrix.latest == true
          run: |
            DIGEST=$(docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ matrix.ros }} --format '{{json .Manifest.Digest}}' | tr -d '"')
            docker buildx imagetools create --tag ${{ env.IMAGE_NAME }}:latest $DIGEST

